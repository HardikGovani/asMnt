i. isset 
Ans: 
isset — Determine if a variable is declared and is different than NULL
isset ( mixed $var [, mixed $... ] ) : bool
Determine if a variable is considered set, this means if a variable is declared and is different than NULL.


ii. Empty 
empty — Determine whether a variable is empty
empty ( mixed $var ) : bool
Determine whether a variable is considered to be empty. A variable is considered empty if it does not exist or if its value equals FALSE. empty() does not generate a warning if the variable does not exist.


iii. Substr 
substr — Return part of a string
substr ( string $string , int $start [, int $length ] ) : string
Returns the portion of string specified by the start and length parameters.


iv. Strops 
strpos — Find the position of the first occurrence of a substring in a string
strpos ( string $haystack , mixed $needle [, int $offset = 0 ] ) : int
Find the numeric position of the first occurrence of needle in the haystack string.
haystack
The string to search in.
needle
If needle is not a string, it is converted to an integer and applied as the ordinal value of a character. This behavior is deprecated as of PHP 7.3.0, and relying on it is highly discouraged. 
Depending on the intended behavior, the needle should either be explicitly cast to string, or an explicit call to chr() should be performed.offset
If specified, search will start this number of characters counted from the beginning of the string. If the offset is negative, the search will start this number of characters counted from the end of the string.

v. stripos 
stripos — Find the position of the first occurrence of a case-insensitive substring in a string
stripos ( string $haystack , mixed $needle [, int $offset = 0 ] ) : int
haystack
The string to search in.
needle
Note that the needle may be a string of one or more characters.
If needle is not a string, it is converted to an integer and applied as the ordinal value of a character. 
This behavior is deprecated as of PHP 7.3.0, and relying on it is highly discouraged. Depending on the intended behavior, the needle should either be explicitly cast to string, or an explicit call to chr() should be performed.offset
If specified, search will start this number of characters counted from the beginning of the string. If the offset is negative, the search will start this number of characters counted from the end of the string.



vi. Strrpos 
strrpos — Find the position of the last occurrence of a substring in a string
strrpos ( string $haystack , mixed $needle [, int $offset = 0 ] ) : int
haystack
The string to search in.
needle
If needle is not a string, it is converted to an integer and applied as the ordinal value of a character. 
This behavior is deprecated as of PHP 7.3.0, and relying on it is highly discouraged. Depending on the intended behavior, the needle should either be explicitly cast to string, or an explicit call to chr() should be performed.offset
If zero or positive, the search is performed left to right skipping the first offset bytes of the haystack.
If negative, the search is performed right to left skipping the last offset bytes of the haystack and searching for the first occurrence of needle.


vii. Strripos 
strripos — Find the position of the last occurrence of a case-insensitive substring in a string
strripos ( string $haystack , mixed $needle [, int $offset = 0 ] ) : int
haystack
The string to search in.
needle
If needle is not a string, it is converted to an integer and applied as the ordinal value of a character. This behavior is deprecated as of PHP 7.3.0, 
and relying on it is highly discouraged. Depending on the intended behavior, the needle should either be explicitly cast to string, or an explicit call to chr() should be performed. offset
If zero or positive, the search is performed left to right skipping the first offset bytes of the haystack.
If negative, the search is performed right to left skipping the last offset bytes of the haystack and searching for the first occurrence of needle.

viii. Strreplace
str_replace — Replace all occurrences of the search string with the replacement string
str_replace ( mixed $search , mixed $replace , mixed $subject [, int &$count ] ) : mixed
This function returns a string or an array with all occurrences of search in subject replaced with the given replace value.
If search and replace are arrays, then str_replace() takes a value from each array and uses them to search and replace on subject. If replace has fewer values than search, then an empty string is used for the rest of replacement values. If search is an array and replace is a string, then this replacement string is used for every value of search. 
The converse would not make sense, though.
If search or replace are arrays, their elements are processed first to last.
search
The value being searched for, otherwise known as the needle. An array may be used to designate multiple needles.
replace
The replacement value that replaces found search values. An array may be used to designate multiple replacements.
subject
The string or array being searched and replaced on, otherwise known as the haystack.
If subject is an array, then the search and replace is performed with every entry of subject, and the return value is an array as well.
count
If passed, this will be set to the number of replacements performed.


xi. strireplace 
str_ireplace — Case-insensitive version of str_replace()
str_ireplace ( mixed $search , mixed $replace , mixed $subject [, int &$count ] ) : mixed
This function returns a string or an array with all occurrences of search in subject (ignoring case) replaced with the given replace value. If you don't need fancy replacing rules, you should generally use this function instead of preg_replace() with the i modifier.
Paramerter same as above strreplace.


x. ltrim 
ltrim — Strip whitespace (or other characters) from the beginning of a string
Strip whitespace (or other characters) from the beginning of a string.
str
The input string.
character_mask
You can also specify the characters you want to strip, by means of the character_mask parameter. Simply list all characters that you want to be stripped. With .. you can specify a range of characters.

xi. Rtrim 
rtrim — Strip whitespace (or other characters) from the end of a string
rtrim ( string $str [, string $character_mask ] ) : string
This function returns a string with whitespace (or other characters) stripped from the end of str.
Without the second parameter, rtrim() will strip these characters:
str
The input string.
character_mask
You can also specify the characters you want to strip, by means of the character_mask parameter. Simply list all characters that you want to be stripped. With .. you can specify a range of characters.


xii. Trim 
trim — Strip whitespace (or other characters) from the beginning and end of a string
trim ( string $str [, string $character_mask = " \t\n\r\0\x0B" ] ) : string
This function returns a string with whitespace stripped from the beginning and end of str. Without the second parameter, trim() will strip these characters:
paramter as above. 


xiii. Strpad 
str_pad — Pad a string to a certain length with another string
str_pad ( string $input , int $pad_length [, string $pad_string = " " [, int $pad_type = STR_PAD_RIGHT ]] ) : string
This function returns the input string padded on the left, the right, or both sides to the specified padding length. If the optional argument pad_string is not supplied, the input is padded with spaces, 
otherwise it is padded with characters from pad_string up to the limit.

xiv. Lcfirst 
lcfirst — Make a string's first character lowercase
lcfirst ( string $str ) : string
Returns a string with the first character of str lowercased if that character is alphabetic.
Note that 'alphabetic' is determined by the current locale. For instance, in the default "C" locale characters such as umlaut-a (ä) will not be converted.

xv. Ucfirst 
ucfirst — Make a string's first character uppercase
ucfirst ( string $str ) : string
Returns a string with the first character of str capitalized, if that character is alphabetic.
Note that 'alphabetic' is determined by the current locale. For instance, in the default "C" locale characters such as umlaut-a (ä) will not be converted.

xvi. Ucword 
ucwords — Uppercase the first character of each word in a string
ucwords ( string $str [, string $delimiters = " \t\r\n\f\v" ] ) : string
Returns a string with the first character of each word in str capitalized, if that character is alphabetic.
The definition of a word is any string of characters that is immediately after any character listed in the delimiters parameter (By default these are: space, form-feed, newline, carriage return, horizontal tab, and vertical tab).
str
The input string.
delimiters
The optional delimiters contains the word separator characters.

xvii. strtolower 
strtolower ( string $string ) : string
Returns string with all alphabetic characters converted to lowercase.
Note that 'alphabetic' is determined by the current locale. This means that e.g. in the default "C" locale, characters such as umlaut-A (Ä) will not be converted.
string
The input string.



[find out more from this link: https://www.php.net/manual/en/function.strtolower.php]
xviii. Strtoupper 
xix. Strrev 
xx. Strshuffle 
xxi. Strrepeat 
xxii. Explode
xxiii. implode 
xxiv. Addslashes 
xxv. Stripslashes 
xxvi. Chr 
xxvii. Ord 
xxviii. Strtok     
xxix.strcmp 
xxx. Strcasecmp 
xxxi. Strnatcasecmp 
xxxii. Strnatcmp 
xxxiii. Strlen        
xxxiv. strstr
xxxv. Strchr 
xxxvi. Strchr 
xxxvii. Strrchr 
xxxviii. Stristr 
xxxix. Strreplace
xxxx. substrreplace